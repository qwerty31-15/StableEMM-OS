org 0x7C00  ; Загрузчик загружается по адресу 0x7C00

start:
    ; Настройка видеорежима
    mov ax, 0x0003  ; Текстовый режим 80x25
    int 0x10        ; Вызов BIOS

    ; Очистка экрана
    mov ax, 0x0600  ; Функция прокрутки экрана
    mov cx, 0x0000  ; Верхний левый угол
    mov dx, 0x184F  ; Нижний правый угол
    mov bh, 0x07    ; Атрибуты (светло-серый на черном)
    int 0x10        ; Вызов BIOS

    ; Установка курсора в верхний левый угол
    mov ah, 0x02    ; Функция установки курсора
    mov bh, 0x00    ; Страница 0
    mov dx, 0x0000  ; Строка 0, столбец 0
    int 0x10        ; Вызов BIOS

    ; Вывод логотипа StableEMM
    mov si, logo    ; Загружаем адрес логотипа
    call print_string

    ; Сообщение о загрузке
    mov si, loading_msg
    call print_string

    ; Завершение (в реальной ОС здесь будет загрузка ядра)
    jmp $

; Функция для вывода строки
print_string:
    mov ah, 0x0E    ; Функция BIOS для вывода символа
.print_char:
    lodsb           ; Загружаем следующий символ из строки в AL
    cmp al, 0       ; Проверяем, не конец ли строки (0)
    je .done        ; Если конец, завершаем
    int 0x10        ; Выводим символ на экран
    jmp .print_char ; Повторяем для следующего символа
.done:
    ret

; Функция задержки
delay:
    push cx
    mov cx, 0x0FFF  ; Значение для задержки
.delay_loop:
    loop .delay_loop
    pop cx
    ret

; Данные
logo db "   _____ _        _     _      _____ __  __ __  __ ", 0x0D, 0x0A,
     db "  / ____| |      | |   | |    | ____|  \/  |  \/  |", 0x0D, 0x0A,
     db " | (___ | |_ __ _| |__ | | ___| |___| \  / | \  / |", 0x0D, 0x0A,
     db "  \___ \| __/ _` | '_ \| |/ _ \  ___| |\/| | |\/| |", 0x0D, 0x0A,
     db "  ____) | || (_| | |_) | |  __/ |___| |  | | |  | |", 0x0D, 0x0A,
     db " |_____/ \__\__,_|_.__/|_|\___|_____|_|  |_|_|  |_|", 0x0D, 0x0A, 0

loading_msg db "Loading StableEMM...", 0

times 510-($-$$) db 0  ; Заполняем оставшуюся часть сектора нулями
dw 0xAA55              ; Сигнатура загрузочного сектора
